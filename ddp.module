<?php
/**
 * @file
 * Dieta dos pontos
 *
 */
/**
 * Implements hook_menu
 * @return string
 */
function ddp_menu() {
  $items = array();
  $items['ddp/profile'] = array(
    'title' => 'DDP - Profile',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ddp_profile_form'),
    'access arguments' => array('authenticated users'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['ddp/admin/foodgroups'] = array(
    'title' => 'DDP - Food Groups',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ddp_admin_addfoodgroups_form'),
    'access arguments' => array('authenticated users'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['ddp/admin/foodgroups2'] = array(
    'title' => 'DDP - Food Groups 2',
    'page callback' => 'ddp_foodgroup',
    'access arguments' => array('authenticated users'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['ddp/admin/food'] = array(
    'title' => 'DDP - Food',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ddp_admin_addfoods_form'),
    'access arguments' => array('authenticated users'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['ddp/admin/teste'] = array(
    'title' => 'DDP - Teste',
    'page callback' => 'teste_table',
    'access arguments' => array('authenticated users'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function ddp_foodgroup() {
  $page = drupal_get_form('ddp_admin_addfoodgroups_form');
  $page = render($page);
  $page .= '<h2>'. t('Food group list') .'</h2>';
  $page .= ddp_foodgroup_list();
  return $page;
}

function ddp_foodgroup_list() {
  $elements = array();
  $qry = db_query('SELECT * FROM {ddp_foodgroup}');
  $rows[] = array();

  foreach ($qry as $record) {
    $rows[] = array(
      array('data' => $record->fgid),
      array('data' => $record->name),
      array('data' => l(t('Edit'),'./ddp/admin/foodgroups2/'. $record->fgid .'/edit'). ' / ' . l(t('Delete'),'./ddp/admin/foodgroups2/'. $record->fgid .'/delete')),
    );
  }

  $header = array(
    array('data' => t('ID')),
    array('data' => t('Group Name')),
    array('data' => ''),
  );

  return theme('table', array('header' => $header, 'rows'=> $rows));
}

/**
 * Implements hook_form().
 * @param type $node
 * @param type $form_state
 * @return type
 */
function ddp_profile_form($node, &$form_state) {
  $form = array();
  $form['sex'] = array(
    '#type' => 'radios',
    '#title' => t('Sex'),
    '#required' => TRUE,
    '#options' => array(
      'Male',
      'Female',
    ),
  );
  $form['weight'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t('weight'),
    '#description' => 'weight in kg',
  );
  $form['width'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t('width'),
    '#description' => 'width in meters',
  );
  $form['birthdate'] = array(
    '#required' => TRUE,
    '#type' => 'date',
    '#title' => t('Birth Date'),
  );
  $form['tmb'] = array(
    '#required' => TRUE,
    '#type' => 'select',
    '#options' => array(
      '1.2' => 'Sedentário',
      '1.4' => 'Levemente ativo',
      '1.6' => 'Moderadamente ativo',
      '1.9' => 'Muito ativo',
      '2.3' => 'Extremamente ativo',
    ),
    '#title' => t('TMB'),
    '#ajax' => array(
      'callback' => 'ddp_profile_callback',
      'wrapper' => 'textfields-div',
     ),
  );
  $form['textfields_fieldset'] = array(
    '#title' => t("Infos"),
    '#prefix' => '<div id="textfields-div">',
    '#suffix' => '</div>',
    '#type' => 'fieldset',
    '#description' => t('Automatic calculus'),
  );
  $form['textfields_fieldset']['age'] = array(
    '#type' => 'textfield',
    '#title' => t('Age'),
    '#disabled' => TRUE,
  );
  $form['textfields_fieldset']['imc'] = array(
    '#type' => 'textfield',
    '#title' => t('IMC'),
    '#disabled' => TRUE,
  );
  $form['textfields_fieldset']['nde'] = array(
    '#type' => 'textfield',
    '#title' => t('NDE'),
    '#disabled' => TRUE,
  );
  $form['textfields_fieldset']['tmb'] = array(
    '#type' => 'textfield',
    '#title' => t('TMB'),
    '#disabled' => TRUE,
  );

  $form['textfields_fieldset']['ftmb'] = array(
    '#type' => 'textfield',
    '#title' => t('FTMB'),
    '#disabled' => TRUE,
  );
  $form['textfields_fieldset']['points'] = array(
    '#type' => 'textfield',
    '#title' => t('Points / Max Points to loss weight'),
    '#disabled' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  if (!empty($form_state['values']['birthdate']['year'])) {
    $today = time();
    $m = $form_state['values']['birthdate']['month'];
    $d = $form_state['values']['birthdate']['day'];
    $y = $form_state['values']['birthdate']['year'];

    print_r($form_state['values']['teste']);

    $birth = gmmktime(0,0,0,$m,$d,$y);
    $age = ($today - $birth) / (365*60*60*24);
    $age = floor($age);
    $weight = $form_state['values']['weight'];
    $width = $form_state['values']['width'];
    $factortmb = $form_state['values']['tmb'];
    $imc = $weight/($width*$width);
    $imc = ceil($imc);

    if($form_state['values']['sex'] == 0) { // Male
      if ($age < 3) {
        $tmb = 60.9 * $weight - 54;
      } else if ($age  < 10) {
        $tmb = 22.7 * $weight + 495;
      } else if ($age  < 18) {
        $tmb = 17.5 * $weight + 651;
      } else if ($age  < 30) {
        $tmb = 15.3 * $weight + 679;
      } else if ($age  < 60) {
        $tmb = (11.6 * $weight) + 879;
      } else {
        $tmb = 13.5 * $weight + 487;
      };
    } else {
      if ($age < 3) {
        $tmb = 61 * $weight - 51;
      } else if ($age  < 10) {
        $tmb = 22.5 * $weight + 499;
      } else if ($age  < 18) {
        $tmb = 12.2 * $weight + 749;
      } else if ($age  < 30) {
        $tmb = 14.7 * $weight + 496;
      } else if ($age  < 60) {
        $tmb = 8.7 * $weight + 829;
      } else {
        $tmb = 10.5 * $weight + 596;
      };
    };

    $nde = $tmb * $factortmb;
    $points = ceil($nde / 3.6);
    $weightindex = ($form_state['values']['sex'] == 0) ? 200 : 175;

    if ($img > 40) {
      $weightindex += 125;
    }
    else if ($img > 35 ) {
      $weightindex += 75;
    } else if ($img > 30 ) {
      $weightindex += 50;
    }


    $pointsw = $points;
    $pointsw -= $weightindex;

    $form['textfields_fieldset']['age']['#default_value']    = $age;
    $form['textfields_fieldset']['imc']['#default_value']    = $imc;
    $form['textfields_fieldset']['nde']['#default_value']    = $nde;
    $form['textfields_fieldset']['points']['#default_value'] = $points. ' / ' .$pointsw;
    $form['textfields_fieldset']['ftmb']['#default_value']   = $factortmb;
    $form['textfields_fieldset']['tmb']['#default_value']    = $tmb;
  }
  return $form;
}

/**
 * Implementation off hook_callback().
 */
function ddp_profile_callback($form, &$form_state) {
  return $form['textfields_fieldset'];
}

function ddp_admin_addfoodgroups_form($node, &$form_state) {
  $form = array();
  $form['groupname'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t('Group Name'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  return $form;
}

function ddp_admin_addfoodgroups_form_submit($node, &$form_state) {
  $tnx = db_transaction();
  try  {
    db_merge('{ddp_foodgroup}')
    ->key(array('name' => $form_state['values']['groupname']))
    ->fields(array(
    'name' => $form_state['values']['groupname'],
    ))
    ->execute();
    drupal_set_message(t('Group Food OK!'));
  }
  catch (Exception $e) {
    $tnx->rollback();
    watchdog_exception('type', $e);
  }
}

/**
 * Implementation of hook_form_alter()
 */
//function form_alter(&$form, $form_state, $form_id) {
//  //drupal_set_message("Form ID is : " . $form_id);
//}


function teste_table() {
  $header = array(
    array('data' => t('Header cell1')),
    array('data' => t('Header cell2')),
    array('data' => t('Header cell3'))
  );
  $rows[] = array(
    array('data' => t('Row 1 – Cell 1')),
    array('data' => t('Row 1 – Cell 2')),
    array('data' => t('Row 1 – Cell 3'))
  );
  $rows[] = array(
    array('data' => t('Row 2 – Cell 1')),
    array('data' => t('Row 2 – Cell 2')),
    array('data' => t('Row 2 – Cell 3'))
  );

  return theme('table', array('header' => $header, 'rows'=> $rows));

}

function ddp_admin_addfoods_form($node, &$form_value) {
  $form = array();
  $form['group'] = array(
    '#type' => 'radios',
    '#title' => t('Sex'),
    '#required' => TRUE,
    '#options' => array(
      'Male',
      'Female',
    ),
  );
  $form['name'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t('weight'),
    '#description' => 'weight in kg',
  );
  $form['points'] = array(
    '#required' => TRUE,
    '#type' => 'textfield',
    '#title' => t('width'),
    '#description' => 'width in meters',
  );
  return $form;
}